name: Go-Build
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get go dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
        
    - name: Sdl2 Base dependencies
      run: sudo apt-get install libx11-xcb-dev libxkbcommon-x11-dev libxtst-dev mingw-w64 libsdl2{,-image,-mixer,-ttf,-gfx}-dev
      
    - name: Sdl2 Windows dependencies
      run: |
        sudo mkdir /tmp/sdl2-build /tmp/sdl2-build/mingw /tmp/sdl2-build/dll;
        sudo wget -P /tmp/sdl2-build http://libsdl.org/release/SDL2-devel-2.0.10-mingw.tar.gz;
        sudo wget -P /tmp/sdl2-build/dll http://libsdl.org/release/SDL2-2.0.10-win32-x64.zip;
        sudo unzip /tmp/sdl2-build/dll/SDL2-2.0.10-win32-x64.zip -d /tmp/sdl2-build/dll;
        sudo tar xvzf /tmp/sdl2-build/SDL2-devel-2.0.10-mingw.tar.gz -C /tmp/sdl2-build/mingw;
        sudo cp -r /tmp/sdl2-build/mingw/SDL2-2.0.10/x86_64-w64-mingw32 /usr;

    - name: Build-Linux
      run: go build -v .

    - name: Build-Windows
      run: env CGO_ENABLED="1" CC="/usr/bin/x86_64-w64-mingw32-gcc" GOOS="windows" CGO_LDFLAGS="-lmingw32 -lSDL2" CGO_CFLAGS="-D_REENTRANT" go build -x goom3d.go
    
    - name: Prepare Linux build artifacts
      run: |
        mkdir ./artifacts-linux;
        mv ./goom3d ./artifacts-linux;
        cp -r ./assets ./artifacts-linux/assets;
        cp -r ./obj ./artifacts-linux/obj;
        
    - name: Prepare Windows build artifacts
      run: |
        mkdir ./artifacts-win;
        mv ./goom3d.exe ./artifacts-win;
        sudo mv /tmp/sdl2-build/dll/SDL2.dll ./artifacts-win;
        cp -r ./assets ./artifacts-win/assets;
        cp -r ./obj ./artifacts-win/obj;

    - name: Upload Linux build artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: "build-${{runner.os}}"
        path: ./artifacts-linux

    - name: Upload Windows build artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: "build-Windows"
        path: ./artifacts-win
